@model InternalProject.Models.ResetPasswordViewModel

@{
    ViewBag.Title = "Reset password";
}

<h2>ResetPassword</h2>

@using (Html.BeginForm("ResetPassword", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Reset your password.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="hidden" name="passwordToken" value="@ViewBag.PasswordToken" />
                <input type="hidden" name="userID" value="@ViewBag.UserID" />
            </div>
        </div>
    </div>
}


<div class="alert alert-info" role="alert">
    <h4>A strong password is required or this will not work.</h4>
</div>

@if (@ViewBag.ShowFlag == 1)
{
    <div class="alert alert-warning" role="alert">
        <h5>@ViewBag.Message</h5>
    </div>
}


@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@


@*@using (Html.BeginForm("ResetPassword", "Home"))
    {

        <label>Password:</label> <input type="text" name="password" /><br>
        <label>Password Confirm:</label> <input type="text" name="passwordConfirm" /><br />
        <input type="submit" value="Submit" />
        <input type="hidden" name="passwordToken" value="@ViewBag.PasswordToken" />
        <input type="hidden" name="userID" value="@ViewBag.UserID" />
    }*@

@*@using (Html.BeginForm("ResetPassword", "Home"))
{
    <div class="form-group">
        <label>Password: </label>
        <input type="password" name="password" />
    </div>
    <div class="form-group">
        <label>Password Confirm:</label>
        <input type="password" name="passwordConfirm" /><br />
    </div>
    <input type="submit" value="Submit" />
    <input type="hidden" name="passwordToken" value="@ViewBag.PasswordToken" />
    <input type="hidden" name="userID" value="@ViewBag.UserID" />
}
<h3>A strong password is required or this will not work.</h3>
<h3>@TempData["message"]</h3>*@

